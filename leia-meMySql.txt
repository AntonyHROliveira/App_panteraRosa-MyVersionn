Usar o MySql do Worckbench (e nao do XAMPP). se o Xampp foi instaldo primeiro sera a porta 3306 e o workbench instalado depois porta 3307. entao configurar a porta de acordo
'pasta' Local instance MySQL80 root localhost:3307
em MySQL Connections + :
connection Name : nome do seu banco
Port: padrao 3306 , mudar para 3307 se tiver Xampp instaladpo
Test Connection e janela de sucesso - banco criado.



01- no workbench , exportar o arquivo EER criado (e que foi salvo em download, por ex) .  na opcao : Forward Enginner SQL CREATE script...
ao abrir uma janela dar Next ( nessa nova janela confirma o numero de tabelas a exportar), 
Next , na proxima tela sera gerado o codigo abaixo. COPIAR e COLAR no bloco de notas. Dar Finish.

02- copiar e colar no bloco de notas o arquivo gerado em SQL (na exportação) 
o arquivo por padrao gera o Schmema com nome XXX, mudar para db_PanteraRosa.
use o menu editar/substituir para facilitar.

3- clicar no menu CASINHA ir para pagina inicial do workbench , onde os "bancos criados" ficam salvo e clicar no banco PanteraRosa (criado anteriormente) , e colar 
Agora deletar todas as linhas inteiras de codigo que apareçam a palavra VISIBLE ao final. 
ex: (INDEX `fk_tbPessoa_tbStatus1_idx` (`idStatus` ASC) VISIBLE,)

4- Após então , deletar o código colado ( já que ele criou o banco). iniciar o preenchimento das tabelas em suas entidades:

USE db_panteraRosa;

SELECT * FROM tbacl;

clicar no Raio, abre  parte de baixo , 

clicar no icone FormEditor, preencher os dados das colunas da tbacl:
idAcl:1, tipo: 1, descricao:administrador .  - Apply, Apply e Finish
proximos ir na aba "Navigate: < ou > 
idAcl:2, tipo:2, descricao:funcionario, apply, apply e finish...
idAcl:3, tipo:3, descricao:cliente ,  apply ....
idAcl:4, tipo:4, descricao:fornecedor, etc , salvar para gravar

no icone em cima de Form Editor, o icone Result Grid = visualiza a tabela Acl , preenchida com as entidades de 01 a 05 ( master a fornecedor)


ou entao: 
insert into tbacl(idAcl, tipo,descricao) values (5,5, 'vendedor');
e voltar para SELECT * FROM acl e comando de inserção...









-- MySQL Script generated by MySQL Workbench
-- Mon Dec  2 14:53:23 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_PanteraRosa  
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_PanteraRosa
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_PanteraRosa` DEFAULT CHARACTER SET utf8 ;
USE `db_PanteraRosa` ;

-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbAcl`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbAcl` (
  `idAcl` INT(10) NOT NULL,
  `tipo` INT(2) NOT NULL,
  `descricao` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idAcl`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbStatus` (
  `idStatus` INT(2) NOT NULL AUTO_INCREMENT,
  `tipo` INT(2) NOT NULL,
  `descricao` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idStatus`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbPessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbPessoa` (
  `idPessoa` INT(4) NOT NULL,
  `nome` VARCHAR(50) NOT NULL,
  `nomeInteiro` VARCHAR(100) NOT NULL,
  `email` VARCHAR(250) NOT NULL,
  `senha` VARCHAR(60) NOT NULL,
  `hash` VARCHAR(60) NOT NULL,
  `dataNascimento` DATE NOT NULL,
  `dataCriacao` DATE NOT NULL,
  `idAcl` INT(10) NOT NULL,
  `idStatus` INT(2) NOT NULL,
  PRIMARY KEY (`idPessoa`),
  INDEX `fk_tbPessoa_tbAcl_idx` (`idAcl` ASC) VISIBLE,
  INDEX `fk_tbPessoa_tbStatus1_idx` (`idStatus` ASC) VISIBLE,
  CONSTRAINT `fk_tbPessoa_tbAcl`
    FOREIGN KEY (`idAcl`)
    REFERENCES `db_PanteraRosa`.`tbAcl` (`idAcl`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbPessoa_tbStatus1`
    FOREIGN KEY (`idStatus`)
    REFERENCES `db_PanteraRosa`.`tbStatus` (`idStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbCategoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbCategoria` (
  `idCategoria` INT(4) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idCategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbProduto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbProduto` (
  `idProduto` INT(4) NOT NULL AUTO_INCREMENT,
  `nomeProduto` VARCHAR(45) NOT NULL,
  `descricao` TEXT(65535) NOT NULL,
  `precoAnterior` FLOAT(45) NOT NULL,
  `precoAtual` FLOAT NOT NULL,
  `fotoImg` BLOB NOT NULL,
  `caminhoImg` DATE NOT NULL,
  `idCategoria` INT(4) NOT NULL,
  `idPessoa` INT(4) NOT NULL,
  PRIMARY KEY (`idProduto`),
  INDEX `fk_tbProduto_tbCategoria1_idx` (`idCategoria` ASC) VISIBLE,
  INDEX `fk_tbProduto_tbPessoa1_idx` (`idPessoa` ASC) VISIBLE,
  CONSTRAINT `fk_tbProduto_tbCategoria1`
    FOREIGN KEY (`idCategoria`)
    REFERENCES `db_PanteraRosa`.`tbCategoria` (`idCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbProduto_tbPessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `db_PanteraRosa`.`tbPessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbAvaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbAvaliacao` (
  `idAvaliacao` INT(4) NOT NULL AUTO_INCREMENT,
  `dataAvaliacao` DATE NOT NULL,
  `notaRating` ENUM('1', '2', '3') NOT NULL,
  `idPessoa` INT(4) NOT NULL,
  `idProduto` INT(4) NOT NULL,
  PRIMARY KEY (`idAvaliacao`),
  INDEX `fk_tbAvaliacao_tbPessoa1_idx` (`idPessoa` ASC) VISIBLE,
  INDEX `fk_tbAvaliacao_tbProduto1_idx` (`idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_tbAvaliacao_tbPessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `db_PanteraRosa`.`tbPessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbAvaliacao_tbProduto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `db_PanteraRosa`.`tbProduto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_PanteraRosa`.`tbSacola`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_PanteraRosa`.`tbSacola` (
  `idSacola` INT(4) NOT NULL AUTO_INCREMENT,
  `CEP` VARCHAR(45) NOT NULL,
  `idProduto` INT(4) NOT NULL,
  `tbCategoria_idCategoria` INT(4) NOT NULL,
  `idPessoa` INT(4) NOT NULL,
  PRIMARY KEY (`idSacola`),
  INDEX `fk_tbSacola_tbProduto1_idx` (`idProduto` ASC) VISIBLE,
  INDEX `fk_tbSacola_tbCategoria1_idx` (`tbCategoria_idCategoria` ASC) VISIBLE,
  INDEX `fk_tbSacola_tbPessoa1_idx` (`idPessoa` ASC) VISIBLE,
  CONSTRAINT `fk_tbSacola_tbProduto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `db_PanteraRosa`.`tbProduto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbSacola_tbCategoria1`
    FOREIGN KEY (`tbCategoria_idCategoria`)
    REFERENCES `db_PanteraRosa`.`tbCategoria` (`idCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbSacola_tbPessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `db_PanteraRosa`.`tbPessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

